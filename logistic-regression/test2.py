import numpy as np
import matplotlib.pyplot as plt


x = np.arange(-3.1, 3.3, 0.2)
x_pos = np.arange(0.1, 3.3, 0.2)
y_exp = np.exp(x)
y_log = np.log(x_pos)
y_log_minus = -1 * np.log(x_pos)

fig, ax = plt.subplots(1, 1, figsize = (8, 7))
ax.plot(x, y_exp, color = 'green', label = 'y = e^x')
ax.plot(x, x, color = 'gray', linestyle = '--', label = 'y = x')
ax.plot(x_pos, y_log, color = 'blue', label = 'y = ln(x)')
ax.plot(x_pos, y_log_minus, color = 'red', label = 'y = -ln(x)')
ax.plot(1, 0, 'ro')
ax.plot(0, 1, 'go')
ax.axvline(x = 0, color = 'black', linestyle = '--')
ax.axhline(y = 0, color = 'black', linestyle = '--')
ax.set_xlabel('g(z) the sigmoid function')
ax.set_ylabel('loss')
ax.set_xlim(-3, 3)
ax.set_ylim(-3, 3)
ax.legend()

plt.tight_layout()
# plt.savefig('figures/ll_01.png')
plt.show()

x_domain = np.arange(0.05, 1.05, 0.05)
x_rest = np.arange(1.0, 3.1, 0.1)

fig, ax = plt.subplots(1, 1, figsize = (8, 6))
ax.plot(x_domain, -1 * np.log(x_domain), color = 'red', label = 'loss = -ln(g(z))')
ax.plot(x_rest, -1 * np.log(x_rest), color = 'red', linestyle = '--')
ax.axvline(x = 0, color = 'black', linestyle = '--')
ax.axvline(x = 1, color = 'gray', linestyle = '--')
ax.axhline(y = 0, color = 'black', linestyle = '--')
ax.set_xlim(-2, 2)
ax.set_ylim(-3, 3)
ax.set_xlabel('g(z) the sigmoid function')
ax.set_ylabel('loss')
ax.set_title('Logistic Loss for y = 1')
ax.legend()

plt.tight_layout()
plt.savefig()
plt.show()

x_dom0 = np.arange(0, 1.05, 0.05)

fig, ax = plt.subplots(1, 1, figsize = (8, 6))
ax.plot(x_dom0, -1 * np.log(1 - x_dom0), color = 'red', label = 'loss = -ln(g(z))')
# ax.plot(x_rest, -1 * np.log(1 - x_rest), color = 'red', linestyle = '--')
ax.axvline(x = 0, color = 'black', linestyle = '--')
ax.axvline(x = 1, color = 'gray', linestyle = '--')
ax.axhline(y = 0, color = 'black', linestyle = '--')
ax.set_xlim(-2, 2)
ax.set_ylim(-3, 3)
ax.set_xlabel('g(z) the sigmoid function')
ax.set_ylabel('loss')
ax.set_title('Logistic Loss for y = 0')
ax.legend()

plt.tight_layout()
plt.savefig()
plt.show()